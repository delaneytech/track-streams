akka {
  actor {
    provider = "cluster"
    enable-additional-serialization-bindings = on
    default-mailbox {
      mailbox-type = "de.aktey.akka.visualmailbox.VisualMailboxType"
    }
  }
  coordinated-shutdown.run-by-jvm-shutdown-hook = on //this is the default value

  cluster.downing-provider-class = "tanukki.akka.cluster.autodown.MajorityLeaderAutoDowning"

  custom-downing {
    stable-after = 10s

    majority-leader-auto-downing {
      majority-member-role = ""
      down-if-in-minority = true
      shutdown-actor-system-on-resolution = true
    }
  }
  remote {
    maximum-payload-bytes = 30000000 bytes
    log-remote-lifecycle-events = off
    netty.tcp {
//      hostname = ${?HOST_IP}
      hostname = 127.0.0.1
//      bind-hostname = ${?HOST_NAME}
      bind-hostname = 0.0.0.0
      port = 2551
      bind-port = 2551
      message-frame-size =  30000000b
      send-buffer-size =  30000000b
      receive-buffer-size =  30000000b
      maximum-frame-size = 30000000b
    }
  }
//  cluster {
//    seed-nodes = [${?SEED_NODES}]
//    seed_nodes = ["akka.tcp://geoant-akka-cluster@127.0.0.1:2551"]
////    seed-nodes = ["akka.tcp://geoant-akka-cluster@127.0.0.1:2551","akka.tcp://geoant-akka-cluster@127.0.0.1:2552","akka.tcp://geoant-akka-cluster@127.0.0.1:2553"]
//  }
  io.dns.resolver = async-dns
  discovery {
//    method = kubernetes-api
//    kubernetes-api {
//          pod-namespace = "default"
//          pod-label-selector = "run=akka-seed"
//          pod-port-name = "management"
//    }
    method = akka-dns
  }
  management {
    http {
//      hostname = ${?HOST_IP}
      hostname = 127.0.0.1
//      bind-hostname = ${?HOST_NAME}
      bind-hostname = 0.0.0.0
      port = 8558
      bind-port = 8558
    }
    cluster.bootstrap {
      contact-point-discovery {
        required-contact-point-nr = 1
      }
    }
  }
}
de.aktey.akka.visualmailbox {
  server.address {
    host: "akka-mailbox-vis"
    port: 60009
  }
}
# Disable legacy metrics in akka-cluster.
akka.cluster.metrics.enabled=off